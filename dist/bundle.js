/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Consts.ts":
/*!***********************!*\
  !*** ./src/Consts.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MemoDrawType = void 0;\nvar MemoDrawType;\n(function (MemoDrawType) {\n    MemoDrawType[\"TIME\"] = \"time\";\n    MemoDrawType[\"NAME\"] = \"name\";\n})(MemoDrawType = exports.MemoDrawType || (exports.MemoDrawType = {}));\n\n\n//# sourceURL=webpack://extractmenu/./src/Consts.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextMemo = exports.BaedalMemo = exports.BaedalView = exports.BlockView = exports.ListView = void 0;\nvar BaedalView_1 = __webpack_require__(/*! ./view/BaedalView */ \"./src/view/BaedalView.ts\");\nObject.defineProperty(exports, \"BaedalView\", ({ enumerable: true, get: function () { return BaedalView_1.BaedalView; } }));\nvar BlockView_1 = __webpack_require__(/*! ./view/BlockView */ \"./src/view/BlockView.ts\");\nObject.defineProperty(exports, \"BlockView\", ({ enumerable: true, get: function () { return BlockView_1.BlockView; } }));\nvar ListView_1 = __webpack_require__(/*! ./view/ListView */ \"./src/view/ListView.ts\");\nObject.defineProperty(exports, \"ListView\", ({ enumerable: true, get: function () { return ListView_1.ListView; } }));\nvar BaedalMemo_1 = __webpack_require__(/*! ./note/BaedalMemo */ \"./src/note/BaedalMemo.ts\");\nObject.defineProperty(exports, \"BaedalMemo\", ({ enumerable: true, get: function () { return BaedalMemo_1.BaedalMemo; } }));\nvar TextMemo_1 = __webpack_require__(/*! ./note/TextMemo */ \"./src/note/TextMemo.ts\");\nObject.defineProperty(exports, \"TextMemo\", ({ enumerable: true, get: function () { return TextMemo_1.TextMemo; } }));\n\n\n//# sourceURL=webpack://extractmenu/./src/index.ts?");

/***/ }),

/***/ "./src/note/BaedalMemo.ts":
/*!********************************!*\
  !*** ./src/note/BaedalMemo.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BaedalMemo = void 0;\nvar Consts_1 = __webpack_require__(/*! ../Consts */ \"./src/Consts.ts\");\nvar BaedalMemo = /** @class */ (function () {\n    function BaedalMemo() {\n        this._logsByTime = {};\n        this._logsByName = {};\n        this._timeAlterText = {};\n        this._isOpen = false;\n        this._drawMode = Consts_1.MemoDrawType.TIME;\n        this._timeCollapseButtons = {};\n    }\n    Object.defineProperty(BaedalMemo.prototype, \"container\", {\n        get: function () {\n            return this._container;\n        },\n        set: function (value) {\n            if (this._container !== value) {\n                this._container = value;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaedalMemo.prototype, \"drawMode\", {\n        get: function () {\n            return this._drawMode;\n        },\n        set: function (value) {\n            if (this._drawMode !== value) {\n                this._drawMode = value;\n                this.draw();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaedalMemo.prototype, \"isOpen\", {\n        get: function () {\n            return this._isOpen;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BaedalMemo.prototype.erase = function () {\n        if (this._container) {\n            this._container.innerHTML = '';\n            this._isOpen = false;\n        }\n    };\n    BaedalMemo.prototype.registerTimeAlterText = function (date, text) {\n        this._timeAlterText[date] = text;\n    };\n    BaedalMemo.prototype.registerLog = function (log, logName) {\n        this._logsByName[logName] = [];\n        for (var i = 0; i < log.timeStamps.length; i++) {\n            this._logsByName[logName].push(log.timeStamps[i]);\n            // 시간\n            if (!this._logsByTime[log.timeStamps[i].date]) {\n                this._logsByTime[log.timeStamps[i].date] = [];\n            }\n            this._logsByTime[log.timeStamps[i].date].push({\n                name: logName,\n                content: log.timeStamps[i].content,\n            });\n        }\n    };\n    BaedalMemo.prototype.draw = function () {\n        var _this = this;\n        if (this._container) {\n            this._isOpen = true;\n            if (this._drawMode === Consts_1.MemoDrawType.NAME) {\n                // TODO 기능 만들기\n                // 아무래도 선택한 개체당 로그를 보여주는 것이 가장 좋을 거 같음.\n            }\n            else if (this._drawMode === Consts_1.MemoDrawType.TIME) {\n                // TODO Collapsable 한 객체 만들기\n                var keys_1 = Object.keys(this._logsByTime);\n                keys_1.sort();\n                keys_1.reverse();\n                var _loop_1 = function (i) {\n                    var logCon = document.createElement('div');\n                    logCon.className = 'log-item-container';\n                    // 날짜\n                    var header = document.createElement('h2');\n                    header.innerHTML = keys_1[i];\n                    logCon.appendChild(header);\n                    // 대체 텍스트가 있을 시\n                    if (this_1._timeAlterText[keys_1[i]]) {\n                        var alter = document.createElement('div');\n                        alter.innerHTML = this_1._timeAlterText[keys_1[i]];\n                        logCon.appendChild(alter);\n                        this_1._container.appendChild(logCon);\n                        return \"break\";\n                    }\n                    // 콜랩스 돔 생성\n                    var collapse = document.createElement('div');\n                    collapse.innerHTML = '펼치기';\n                    collapse.className = 'bm-collapse-button';\n                    header.appendChild(collapse);\n                    // 리스트가 들어가있는 컨테이너\n                    var logSubCon = document.createElement('div');\n                    logSubCon.className = 'log-item-sub-container';\n                    logCon.appendChild(logSubCon);\n                    // 콜랩스 버튼 리스너\n                    var tl = this_1._logsByTime[keys_1[i]]; // 데이터\n                    var collapseTimeLog = function () {\n                        var timeLog = _this._timeCollapseButtons[keys_1[i]]; // 돔정보\n                        if (timeLog.isExtended) {\n                            // TODO 이 작업 어딘가서 해주기\n                            // timeLog.dom.removeEventListener('click', timeLog.listener);\n                            timeLog.dom.innerText = '펼치기';\n                            timeLog.list.innerHTML = '';\n                            timeLog.isExtended = false;\n                        }\n                        else {\n                            timeLog.dom.innerText = '숨기기';\n                            var prevName = '';\n                            var prevTarget = void 0;\n                            for (var j = 0; j < tl.length; j++) {\n                                var n = tl[j].name;\n                                var c = tl[j].content;\n                                if (prevName !== n) {\n                                    prevName = n;\n                                    var smallHeader = document.createElement('h3');\n                                    smallHeader.innerHTML = n;\n                                    logSubCon.appendChild(smallHeader);\n                                    var ul = document.createElement('ul');\n                                    logSubCon.appendChild(ul);\n                                    prevTarget = ul;\n                                }\n                                var li = document.createElement('li');\n                                li.innerHTML = \"\" + c;\n                                prevTarget === null || prevTarget === void 0 ? void 0 : prevTarget.appendChild(li);\n                            }\n                            timeLog.isExtended = true;\n                        }\n                    };\n                    // 돔에 리스너 추가\n                    collapse.addEventListener('click', collapseTimeLog.bind(this_1));\n                    // 콜랩스 내부에 등록\n                    this_1._timeCollapseButtons[keys_1[i]] = {\n                        dom: collapse,\n                        listener: collapseTimeLog,\n                        list: logSubCon,\n                        isExtended: false\n                    };\n                    // 시간 당 가나다 순으로 정렬\n                    this_1._logsByTime[keys_1[i]].sort(function (a, b) {\n                        var minLen = a.name.length > b.name.length ? b.name.length : a.name.length;\n                        for (var temp = 0; temp < minLen; temp++) {\n                            if (a.name.charAt(temp) < b.name.charAt(temp)) {\n                                return -1;\n                            }\n                            else {\n                                return 1;\n                            }\n                        }\n                        return 1;\n                    });\n                    // 리스트 생성\n                    this_1._container.appendChild(logCon);\n                };\n                var this_1 = this;\n                for (var i = 0; i < keys_1.length; i++) {\n                    var state_1 = _loop_1(i);\n                    if (state_1 === \"break\")\n                        break;\n                }\n            }\n        }\n    };\n    return BaedalMemo;\n}());\nexports.BaedalMemo = BaedalMemo;\n\n\n//# sourceURL=webpack://extractmenu/./src/note/BaedalMemo.ts?");

/***/ }),

/***/ "./src/note/TextMemo.ts":
/*!******************************!*\
  !*** ./src/note/TextMemo.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextMemo = void 0;\nvar TextMemo = /** @class */ (function () {\n    function TextMemo(container) {\n        this._innerHTML = '';\n        this._isOpen = false;\n        this._container = container;\n        this._container.addEventListener('click', this.click.bind(this));\n    }\n    Object.defineProperty(TextMemo.prototype, \"container\", {\n        get: function () {\n            return this._container;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextMemo.prototype, \"isOpen\", {\n        get: function () {\n            return this._isOpen;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextMemo.prototype, \"innerHTML\", {\n        get: function () {\n            return this._innerHTML;\n        },\n        set: function (value) {\n            if (this._innerHTML !== value) {\n                this._innerHTML = value;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TextMemo.prototype.draw = function () {\n        this._container.innerHTML = \"<div class=\\\"inner-text-memo\\\">\" + this._innerHTML + \"</div>\";\n        this._isOpen = true;\n    };\n    TextMemo.prototype.erase = function () {\n        this._container.innerHTML = '';\n        this._isOpen = false;\n    };\n    TextMemo.prototype.click = function () {\n        this._container.removeEventListener('click', this.click.bind(this));\n        this.erase();\n    };\n    return TextMemo;\n}());\nexports.TextMemo = TextMemo;\n\n\n//# sourceURL=webpack://extractmenu/./src/note/TextMemo.ts?");

/***/ }),

/***/ "./src/view/BaedalView.ts":
/*!********************************!*\
  !*** ./src/view/BaedalView.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BaedalView = void 0;\nvar BaseView_1 = __webpack_require__(/*! ./BaseView */ \"./src/view/BaseView.ts\");\nvar BaedalMemo_1 = __webpack_require__(/*! ../note/BaedalMemo */ \"./src/note/BaedalMemo.ts\");\n/**\n * 배달 업체 제출용 뷰를 만드는 클래스\n *\n * TODO: 클릭 시 interaction 고민하기\n */\nvar BaedalView = /** @class */ (function (_super) {\n    __extends(BaedalView, _super);\n    function BaedalView() {\n        var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n        _this_1._conCount = 1;\n        _this_1._drawMode = 0;\n        _this_1._show = true;\n        _this_1._isOpen = false;\n        _this_1._memo = new BaedalMemo_1.BaedalMemo();\n        _this_1._firstTime = true;\n        _this_1._listenersStore = {};\n        return _this_1;\n    }\n    BaedalView.prototype.draw = function () {\n        if (typeof this.container !== 'string') {\n            this.createBox(this.data, this.container);\n            if (this._firstTime) {\n                this._firstTime = false;\n            }\n            this._isOpen = true;\n        }\n    };\n    Object.defineProperty(BaedalView.prototype, \"drawMode\", {\n        set: function (value) {\n            if (this._drawMode !== value) {\n                this._drawMode = value;\n                this.erase();\n                this.draw();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaedalView.prototype, \"memo\", {\n        get: function () {\n            return this._memo;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaedalView.prototype, \"isOpen\", {\n        get: function () {\n            return this._isOpen;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaedalView.prototype, \"show\", {\n        // 쓰는데 고민\n        get: function () {\n            return this._show;\n        },\n        set: function (value) {\n            if (this._show !== value) {\n                if (typeof this.container !== 'string') {\n                    this._show = value;\n                    if (!this._show) {\n                        this.container.style.display = 'none';\n                    }\n                    else {\n                        this.container.style.display = '';\n                    }\n                }\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BaedalView.prototype.createBox = function (data, parent, delivery) {\n        if (data['template']) {\n            this.createColumn(data, parent);\n        }\n        else if (data['name']) {\n            this.createItem(data, parent, delivery);\n        }\n        else {\n            this.createContainer(data, parent);\n        }\n    };\n    BaedalView.prototype.createContainer = function (data, parent) {\n        for (var key in data) {\n            var conInner = document.createElement('div');\n            conInner.className = 'con-inner' + this._conCount;\n            this._conCount++;\n            this.createBox(data[key], conInner);\n            this._conCount--;\n            if (this._conCount === 1) {\n                var con = document.createElement('div');\n                con.className = 'con-name' + this._conCount;\n                con.innerHTML = key;\n                con.id = \"con-\" + key;\n                parent.appendChild(con);\n            }\n            parent.appendChild(conInner);\n        }\n    };\n    BaedalView.prototype.createColumn = function (data, parent) {\n        if (data.delivery === false) {\n            return;\n        }\n        var columnDOM = document.createElement('div');\n        columnDOM.className = 'column';\n        var itemsDOM = document.createElement('div');\n        itemsDOM.className = 'items';\n        var name = data.template.KR;\n        var items = data.items;\n        columnDOM.innerHTML = \"<b>\" + name + \"</b>\";\n        columnDOM.id = \"column-\" + name;\n        var len = items.length;\n        if (data.delivery) {\n            for (var i = 0; i < len; i++) {\n                this.createBox(items[i], itemsDOM, true);\n            }\n        }\n        else {\n            for (var i = 0; i < len; i++) {\n                this.createBox(items[i], itemsDOM);\n            }\n        }\n        parent.appendChild(columnDOM);\n        parent.appendChild(itemsDOM);\n    };\n    BaedalView.prototype.createItem = function (data, parent, delivery) {\n        if (!delivery) {\n            if (!data.delivery) {\n                return;\n            }\n        }\n        var itemDom = document.createElement('div');\n        itemDom.className = 'item-container';\n        itemDom.innerHTML = \"<div style=\\\"width:200px; font-size: 20px;\\\">\" + data.name.KR + \"</div>\";\n        itemDom.id = \"item-\" + data.name.EN;\n        // TODO 스파게티 코드 고치기, 그릴때 데이터를 레지스터하면 이런 일이 발생해요 ㅠㅠ\n        if (this._firstTime) {\n            this.registerMemo(data.log, data.name.KR);\n        }\n        // 그릴 때 타임스탬프 데이터 이용하기 최근 꺼 줄쳐주는거?\n        // 한달 이상은 안댐\n        // TODO 테스트때문에 이프문 쓴거\n        // 나중에 머리써서 고치자\n        if (data.log) {\n            var tStmps = data.log.timeStamps;\n            var lastModifed = tStmps[tStmps.length - 1].date;\n            var lmDay = new Date(lastModifed);\n            this.recentAddedStyle(7, 'recent-added-week', lmDay, itemDom);\n            this.recentAddedStyle(3, 'recent-added-three', lmDay, itemDom, 'recent-added-week');\n            this.recentAddedStyle(1, 'recent-added-yesterday', lmDay, itemDom, 'recent-added-three');\n        }\n        // 중복\n        if (data.status.wronglyRegistered) {\n            itemDom.className = 'item-container';\n            itemDom.classList.add('item-caution');\n        }\n        this.createPrice(data.price, itemDom, data.packing);\n        this.createOpts(data.menuOptions, itemDom);\n        parent.appendChild(itemDom);\n    };\n    BaedalView.prototype.recentAddedStyle = function (timeAsDay, styleName, lmDay, targetDOM, delStyleName) {\n        var difference = function (date1, date2) {\n            var date1utc = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n            var date2utc = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n            var day = 1000 * 60 * 60 * 24;\n            return (date2utc - date1utc) / day;\n        };\n        var today = new Date();\n        var diff = difference(lmDay, today);\n        if (diff <= timeAsDay) {\n            targetDOM.classList.add(styleName);\n            if (delStyleName) {\n                targetDOM.classList.remove(delStyleName);\n            }\n        }\n    };\n    BaedalView.prototype.createPrice = function (price, parent, packingfee) {\n        var priceContainer = document.createElement('div');\n        priceContainer.className = 'price-con';\n        priceContainer.innerHTML = '<b>가격</b>';\n        for (var priceType in price) {\n            var priT = priceType === 'dessert' || priceType === 'meal' ? '' : priceType + ': ';\n            var priceString = \"\" + priT + (price[priceType] + (packingfee || 0)) + \"\\uC6D0\";\n            var pri = document.createElement('div');\n            pri.innerHTML = priceString;\n            priceContainer.appendChild(pri);\n        }\n        parent.appendChild(priceContainer);\n    };\n    BaedalView.prototype.createOpts = function (menuOpts, parent) {\n        if (this._drawMode === 0) {\n            var menuOptDom = document.createElement('div');\n            menuOptDom.className = 'opt-con';\n            for (var menuOptType in menuOpts) {\n                var innerOpt = document.createElement('div');\n                if (menuOptType === 'extra' || menuOptType === 'addEventBeverage') {\n                    innerOpt.innerHTML = '<b>추가</b>';\n                    innerOpt.className = 'extra';\n                    var optData = menuOpts[menuOptType];\n                    this.createExtraSimple(optData, innerOpt);\n                }\n                else if (menuOptType === 'perl') {\n                    innerOpt.innerHTML = '<b>펄 선택</b>';\n                    innerOpt.className = 'perl';\n                    var optData = menuOpts[menuOptType];\n                    this.createExtraSimple(optData, innerOpt);\n                }\n                else if (menuOptType === 'taste') {\n                    innerOpt.innerHTML = '<b>맛</b>';\n                    innerOpt.className = 'taste';\n                    var optData = menuOpts[menuOptType];\n                    this.createExtraSimple(optData, innerOpt);\n                }\n                else if (menuOptType === 'type') {\n                    innerOpt.innerHTML = '<b>종류</b>';\n                    innerOpt.className = 'type';\n                    var optData = menuOpts[menuOptType];\n                    this.createExtraSimple(optData, innerOpt);\n                }\n                else if (menuOptType === 'candle') {\n                    innerOpt.innerHTML = '<b>초</b>';\n                    innerOpt.className = 'candle';\n                    var optData = menuOpts[menuOptType];\n                    this.createExtraSimple(optData, innerOpt);\n                }\n                else if (menuOptType === 'sizeUp') {\n                    innerOpt.className = 'size-up';\n                    innerOpt.innerHTML = \"\\uC0AC\\uC774\\uC988\\uC5C5: \" + menuOpts[menuOptType] + \"\\uC6D0\";\n                }\n                menuOptDom.appendChild(innerOpt);\n            }\n            parent.appendChild(menuOptDom);\n        }\n        else if (this._drawMode === 1) {\n        }\n    };\n    BaedalView.prototype.createExtraSimple = function (simpleData, parent) {\n        for (var i = 0; i < simpleData.length; i++) {\n            var simple = document.createElement('div');\n            if (typeof simpleData[i] === 'number') {\n                simple.innerHTML = '<b>총 최대 추가 가능 갯수: 4</b>';\n            }\n            else {\n                var sd = simpleData[i];\n                var sdString = sd.KR;\n                if (sd.price) {\n                    sdString += \": \" + sd.price + \"\\uC6D0\";\n                    if (sd.maxNumber) {\n                        sdString += \"<i>(\" + sd.maxNumber + \"\\uAC1C \\uAE4C\\uC9C0 \\uCD94\\uAC00 \\uAC00\\uB2A5)</i>\";\n                    }\n                }\n                simple.innerHTML = sdString;\n            }\n            parent.appendChild(simple);\n        }\n    };\n    BaedalView.prototype.registerMemo = function (log, logName) {\n        var _a;\n        if (log) {\n            (_a = this._memo) === null || _a === void 0 ? void 0 : _a.registerLog(log, logName);\n        }\n        else {\n            console.error('You Omitted Log of: ' + logName);\n        }\n    };\n    BaedalView.prototype.erase = function () {\n        if (typeof this.container !== 'string') {\n            this.removeEventListeners();\n            this.container.innerHTML = '';\n            this._isOpen = false;\n        }\n    };\n    BaedalView.prototype.removeEventListeners = function () {\n        var _this = this;\n        for (var listenerName in this._listenersStore) {\n            for (var i = 0; i < this._listenersStore[listenerName].length; i++) {\n                this._listenersStore[listenerName][i].removeEventListener('click', _this[listenerName]);\n            }\n        }\n    };\n    return BaedalView;\n}(BaseView_1.BaseView));\nexports.BaedalView = BaedalView;\n\n\n//# sourceURL=webpack://extractmenu/./src/view/BaedalView.ts?");

/***/ }),

/***/ "./src/view/BaseView.ts":
/*!******************************!*\
  !*** ./src/view/BaseView.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BaseView = void 0;\n/**\n *\n */\nvar BaseView = /** @class */ (function () {\n    function BaseView() {\n        this._data = {};\n        this._container = '';\n    }\n    Object.defineProperty(BaseView.prototype, \"container\", {\n        /**\n         * 컨테이너\n         */\n        get: function () {\n            return this._container;\n        },\n        set: function (container) {\n            this._container = container;\n            if (typeof this._container === 'string') {\n                this._container = document.getElementById(this._container) || 'There is no such element with id: ' + this._container;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseView.prototype, \"data\", {\n        /**\n         * 데이터\n         */\n        get: function () {\n            return this._data;\n        },\n        set: function (value) {\n            if (this._data !== value) {\n                this._data = value;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return BaseView;\n}());\nexports.BaseView = BaseView;\n\n\n//# sourceURL=webpack://extractmenu/./src/view/BaseView.ts?");

/***/ }),

/***/ "./src/view/BlockView.ts":
/*!*******************************!*\
  !*** ./src/view/BlockView.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlockView = void 0;\nvar BaseView_1 = __webpack_require__(/*! ./BaseView */ \"./src/view/BaseView.ts\");\n/**\n *\n */\nvar BlockView = /** @class */ (function (_super) {\n    __extends(BlockView, _super);\n    function BlockView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._semanticBox = {};\n        return _this;\n    }\n    BlockView.prototype.draw = function (doBuildBox) {\n        if (doBuildBox === void 0) { doBuildBox = true; }\n        if (doBuildBox) {\n            this.buildBox();\n        }\n    };\n    BlockView.prototype.buildBox = function () {\n        this._semanticBox = this._data;\n    };\n    BlockView.prototype._buildSemanticBox = function () {\n    };\n    BlockView.prototype._buildNormalBox = function () {\n    };\n    BlockView.prototype._buildBasicBox = function () {\n    };\n    return BlockView;\n}(BaseView_1.BaseView));\nexports.BlockView = BlockView;\n\n\n//# sourceURL=webpack://extractmenu/./src/view/BlockView.ts?");

/***/ }),

/***/ "./src/view/ListView.ts":
/*!******************************!*\
  !*** ./src/view/ListView.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ListView = void 0;\n/**\n *\n */\nvar ListView = /** @class */ (function () {\n    function ListView() {\n    }\n    return ListView;\n}());\nexports.ListView = ListView;\n\n\n//# sourceURL=webpack://extractmenu/./src/view/ListView.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__("./src/index.ts");
/******/ })()
;
});